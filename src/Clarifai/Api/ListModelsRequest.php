<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.ListModelsRequest</code>
 */
class ListModelsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     */
    protected $user_app_id = null;
    /**
     * (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     * Defaults to 1.
     *
     * Generated from protobuf field <code>uint32 page = 2;</code>
     */
    protected $page = 0;
    /**
     * (optional URL parameter) The number of results that will be contained in each page. Defaults
     * to 128.
     *
     * Generated from protobuf field <code>uint32 per_page = 3;</code>
     */
    protected $per_page = 0;
    /**
     * Generated from protobuf field <code>repeated string ids = 4;</code>
     */
    private $ids;
    /**
     * Filter by the name of the model. This supports wilcard queries like "gen*" to match "general" as an example.
     *
     * Generated from protobuf field <code>string name = 5;</code>
     */
    protected $name = '';
    /**
     * Filter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's
     * supported.
     *
     * Generated from protobuf field <code>string model_type_id = 6;</code>
     */
    protected $model_type_id = '';
    /**
     * If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.
     *
     * Generated from protobuf field <code>bool trained_only = 7;</code>
     */
    protected $trained_only = false;
    /**
     * The list of input fields to the model.
     * For example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.
     *
     * Generated from protobuf field <code>repeated string input_fields = 8;</code>
     */
    private $input_fields;
    /**
     * The list of output fields to the model.
     * For example, you can specify 'regions[...].data.concepts', which will return visual-detector models.
     *
     * Generated from protobuf field <code>repeated string output_fields = 9;</code>
     */
    private $output_fields;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *     @type int $page
     *           (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     *           Defaults to 1.
     *     @type int $per_page
     *           (optional URL parameter) The number of results that will be contained in each page. Defaults
     *           to 128.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $ids
     *     @type string $name
     *           Filter by the name of the model. This supports wilcard queries like "gen*" to match "general" as an example.
     *     @type string $model_type_id
     *           Filter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's
     *           supported.
     *     @type bool $trained_only
     *           If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $input_fields
     *           The list of input fields to the model.
     *           For example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $output_fields
     *           The list of output fields to the model.
     *           For example, you can specify 'regions[...].data.concepts', which will return visual-detector models.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @return \Clarifai\Api\UserAppIDSet
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     * Defaults to 1.
     *
     * Generated from protobuf field <code>uint32 page = 2;</code>
     * @return int
     */
    public function getPage()
    {
        return $this->page;
    }

    /**
     * (optional URL parameter) The page number. Pagination is used to split the results into chunks.
     * Defaults to 1.
     *
     * Generated from protobuf field <code>uint32 page = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPage($var)
    {
        GPBUtil::checkUint32($var);
        $this->page = $var;

        return $this;
    }

    /**
     * (optional URL parameter) The number of results that will be contained in each page. Defaults
     * to 128.
     *
     * Generated from protobuf field <code>uint32 per_page = 3;</code>
     * @return int
     */
    public function getPerPage()
    {
        return $this->per_page;
    }

    /**
     * (optional URL parameter) The number of results that will be contained in each page. Defaults
     * to 128.
     *
     * Generated from protobuf field <code>uint32 per_page = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPerPage($var)
    {
        GPBUtil::checkUint32($var);
        $this->per_page = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string ids = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIds()
    {
        return $this->ids;
    }

    /**
     * Generated from protobuf field <code>repeated string ids = 4;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->ids = $arr;

        return $this;
    }

    /**
     * Filter by the name of the model. This supports wilcard queries like "gen*" to match "general" as an example.
     *
     * Generated from protobuf field <code>string name = 5;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Filter by the name of the model. This supports wilcard queries like "gen*" to match "general" as an example.
     *
     * Generated from protobuf field <code>string name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Filter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's
     * supported.
     *
     * Generated from protobuf field <code>string model_type_id = 6;</code>
     * @return string
     */
    public function getModelTypeId()
    {
        return $this->model_type_id;
    }

    /**
     * Filter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's
     * supported.
     *
     * Generated from protobuf field <code>string model_type_id = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setModelTypeId($var)
    {
        GPBUtil::checkString($var, True);
        $this->model_type_id = $var;

        return $this;
    }

    /**
     * If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.
     *
     * Generated from protobuf field <code>bool trained_only = 7;</code>
     * @return bool
     */
    public function getTrainedOnly()
    {
        return $this->trained_only;
    }

    /**
     * If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.
     *
     * Generated from protobuf field <code>bool trained_only = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setTrainedOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->trained_only = $var;

        return $this;
    }

    /**
     * The list of input fields to the model.
     * For example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.
     *
     * Generated from protobuf field <code>repeated string input_fields = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInputFields()
    {
        return $this->input_fields;
    }

    /**
     * The list of input fields to the model.
     * For example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.
     *
     * Generated from protobuf field <code>repeated string input_fields = 8;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInputFields($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->input_fields = $arr;

        return $this;
    }

    /**
     * The list of output fields to the model.
     * For example, you can specify 'regions[...].data.concepts', which will return visual-detector models.
     *
     * Generated from protobuf field <code>repeated string output_fields = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getOutputFields()
    {
        return $this->output_fields;
    }

    /**
     * The list of output fields to the model.
     * For example, you can specify 'regions[...].data.concepts', which will return visual-detector models.
     *
     * Generated from protobuf field <code>repeated string output_fields = 9;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setOutputFields($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->output_fields = $arr;

        return $this;
    }

}

