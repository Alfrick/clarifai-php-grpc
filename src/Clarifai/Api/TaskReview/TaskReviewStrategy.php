<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api\TaskReview;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.TaskReview.TaskReviewStrategy</code>
 */
class TaskReviewStrategy
{
    /**
     * Generated from protobuf enum <code>TASK_REVIEW_STRATEGY_NOT_SET = 0;</code>
     */
    const TASK_REVIEW_STRATEGY_NOT_SET = 0;
    /**
     * No review is needed.
     *
     * Generated from protobuf enum <code>NONE = 1;</code>
     */
    const NONE = 1;
    /**
     * Manual review strategy.
     *
     * Generated from protobuf enum <code>MANUAL = 2;</code>
     */
    const MANUAL = 2;
    /**
     * Consensus review strategy.
     *
     * Generated from protobuf enum <code>CONSENSUS = 3;</code>
     */
    const CONSENSUS = 3;

    private static $valueToName = [
        self::TASK_REVIEW_STRATEGY_NOT_SET => 'TASK_REVIEW_STRATEGY_NOT_SET',
        self::NONE => 'NONE',
        self::MANUAL => 'MANUAL',
        self::CONSENSUS => 'CONSENSUS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TaskReviewStrategy::class, \Clarifai\Api\TaskReview_TaskReviewStrategy::class);

