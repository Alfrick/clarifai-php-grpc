<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.PutTaskAssignmentsRequestAction</code>
 */
class PutTaskAssignmentsRequestAction
{
    /**
     * Generated from protobuf enum <code>PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET = 0;</code>
     */
    const PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET = 0;
    /**
     * Generated from protobuf enum <code>LABEL_START = 1;</code>
     */
    const LABEL_START = 1;
    /**
     * Generated from protobuf enum <code>LABEL_SUBMIT = 2;</code>
     */
    const LABEL_SUBMIT = 2;
    /**
     * Generated from protobuf enum <code>REVIEW_START = 10;</code>
     */
    const REVIEW_START = 10;
    /**
     * Generated from protobuf enum <code>REVIEW_APPROVE = 11;</code>
     */
    const REVIEW_APPROVE = 11;
    /**
     * Generated from protobuf enum <code>REVIEW_REQUEST_CHANGES = 12;</code>
     */
    const REVIEW_REQUEST_CHANGES = 12;

    private static $valueToName = [
        self::PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET => 'PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET',
        self::LABEL_START => 'LABEL_START',
        self::LABEL_SUBMIT => 'LABEL_SUBMIT',
        self::REVIEW_START => 'REVIEW_START',
        self::REVIEW_APPROVE => 'REVIEW_APPROVE',
        self::REVIEW_REQUEST_CHANGES => 'REVIEW_REQUEST_CHANGES',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

