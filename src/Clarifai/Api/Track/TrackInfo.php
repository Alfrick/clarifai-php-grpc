<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api\Track;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Here is where we store the track metadata.
 *
 * Generated from protobuf message <code>clarifai.api.Track.TrackInfo</code>
 */
class TrackInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Number of frames
     *
     * Generated from protobuf field <code>uint32 num_frames = 1;</code>
     */
    protected $num_frames = 0;
    /**
     * Timestamp where track begins.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp begin_time = 2;</code>
     */
    protected $begin_time = null;
    /**
     * Timestamp where track ends.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    protected $end_time = null;
    /**
     * Quality of the track.
     *
     * Generated from protobuf field <code>float quality = 4;</code>
     */
    protected $quality = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $num_frames
     *           Number of frames
     *     @type \Google\Protobuf\Timestamp $begin_time
     *           Timestamp where track begins.
     *     @type \Google\Protobuf\Timestamp $end_time
     *           Timestamp where track ends.
     *     @type float $quality
     *           Quality of the track.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Number of frames
     *
     * Generated from protobuf field <code>uint32 num_frames = 1;</code>
     * @return int
     */
    public function getNumFrames()
    {
        return $this->num_frames;
    }

    /**
     * Number of frames
     *
     * Generated from protobuf field <code>uint32 num_frames = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setNumFrames($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_frames = $var;

        return $this;
    }

    /**
     * Timestamp where track begins.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp begin_time = 2;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getBeginTime()
    {
        return $this->begin_time;
    }

    /**
     * Timestamp where track begins.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp begin_time = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setBeginTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->begin_time = $var;

        return $this;
    }

    /**
     * Timestamp where track ends.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 3;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getEndTime()
    {
        return $this->end_time;
    }

    /**
     * Timestamp where track ends.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->end_time = $var;

        return $this;
    }

    /**
     * Quality of the track.
     *
     * Generated from protobuf field <code>float quality = 4;</code>
     * @return float
     */
    public function getQuality()
    {
        return $this->quality;
    }

    /**
     * Quality of the track.
     *
     * Generated from protobuf field <code>float quality = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setQuality($var)
    {
        GPBUtil::checkFloat($var);
        $this->quality = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TrackInfo::class, \Clarifai\Api\Track_TrackInfo::class);

