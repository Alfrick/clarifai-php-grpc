<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Create (train) a new model version.
 *
 * Generated from protobuf message <code>clarifai.api.PostModelVersionsRequest</code>
 */
class PostModelVersionsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     */
    protected $user_app_id = null;
    /**
     * Generated from protobuf field <code>string model_id = 2;</code>
     */
    protected $model_id = '';
    /**
     * Generated from protobuf field <code>repeated .clarifai.api.ModelVersion model_versions = 3;</code>
     */
    private $model_versions;
    /**
     * Use this to filter inputs that are used in training
     * Alternatively, dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search search = 4 [deprecated = true];</code>
     * @deprecated
     */
    protected $search = null;
    /**
     *train_search is used to specify what data to train on.
     * Alternatively, use dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search train_search = 5 [deprecated = true];</code>
     * @deprecated
     */
    protected $train_search = null;
    /**
     *test_search is used to specify what data to test on.
     * Alternatively, use dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search test_search = 6 [deprecated = true];</code>
     * @deprecated
     */
    protected $test_search = null;
    /**
     * Description about this training run
     *
     * Generated from protobuf field <code>string description = 8;</code>
     */
    protected $description = '';
    /**
     * Use the data from this dataset version for training.
     * Set dataset_version.dataset_id to identify the dataset that you would like to use.
     * When dataset_version.id field is set,
     * the system will reuse the data from provided dataset version.
     * When dataset_version.id is not set,
     * a new dataset version will be created in the dataset using provided dataset_version fields.
     *
     * Generated from protobuf field <code>.clarifai.api.DatasetVersion dataset_version = 9;</code>
     */
    protected $dataset_version = null;
    /**
     * When evaluate_after_training set to true, we will do evaluation immediately after training finishes.
     * We will merge this with default_eval_info.
     *
     * Generated from protobuf field <code>.clarifai.api.EvalInfo eval_info = 10;</code>
     */
    protected $eval_info = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *     @type string $model_id
     *     @type array<\Clarifai\Api\ModelVersion>|\Google\Protobuf\Internal\RepeatedField $model_versions
     *     @type \Clarifai\Api\Search $search
     *           Use this to filter inputs that are used in training
     *           Alternatively, dataset_version field.
     *     @type \Clarifai\Api\Search $train_search
     *          train_search is used to specify what data to train on.
     *           Alternatively, use dataset_version field.
     *     @type \Clarifai\Api\Search $test_search
     *          test_search is used to specify what data to test on.
     *           Alternatively, use dataset_version field.
     *     @type string $description
     *           Description about this training run
     *     @type \Clarifai\Api\DatasetVersion $dataset_version
     *           Use the data from this dataset version for training.
     *           Set dataset_version.dataset_id to identify the dataset that you would like to use.
     *           When dataset_version.id field is set,
     *           the system will reuse the data from provided dataset version.
     *           When dataset_version.id is not set,
     *           a new dataset version will be created in the dataset using provided dataset_version fields.
     *     @type \Clarifai\Api\EvalInfo $eval_info
     *           When evaluate_after_training set to true, we will do evaluation immediately after training finishes.
     *           We will merge this with default_eval_info.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @return \Clarifai\Api\UserAppIDSet|null
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    public function hasUserAppId()
    {
        return isset($this->user_app_id);
    }

    public function clearUserAppId()
    {
        unset($this->user_app_id);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string model_id = 2;</code>
     * @return string
     */
    public function getModelId()
    {
        return $this->model_id;
    }

    /**
     * Generated from protobuf field <code>string model_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setModelId($var)
    {
        GPBUtil::checkString($var, True);
        $this->model_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .clarifai.api.ModelVersion model_versions = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getModelVersions()
    {
        return $this->model_versions;
    }

    /**
     * Generated from protobuf field <code>repeated .clarifai.api.ModelVersion model_versions = 3;</code>
     * @param array<\Clarifai\Api\ModelVersion>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setModelVersions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\ModelVersion::class);
        $this->model_versions = $arr;

        return $this;
    }

    /**
     * Use this to filter inputs that are used in training
     * Alternatively, dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search search = 4 [deprecated = true];</code>
     * @return \Clarifai\Api\Search|null
     * @deprecated
     */
    public function getSearch()
    {
        @trigger_error('search is deprecated.', E_USER_DEPRECATED);
        return $this->search;
    }

    public function hasSearch()
    {
        @trigger_error('search is deprecated.', E_USER_DEPRECATED);
        return isset($this->search);
    }

    public function clearSearch()
    {
        @trigger_error('search is deprecated.', E_USER_DEPRECATED);
        unset($this->search);
    }

    /**
     * Use this to filter inputs that are used in training
     * Alternatively, dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search search = 4 [deprecated = true];</code>
     * @param \Clarifai\Api\Search $var
     * @return $this
     * @deprecated
     */
    public function setSearch($var)
    {
        @trigger_error('search is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Clarifai\Api\Search::class);
        $this->search = $var;

        return $this;
    }

    /**
     *train_search is used to specify what data to train on.
     * Alternatively, use dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search train_search = 5 [deprecated = true];</code>
     * @return \Clarifai\Api\Search|null
     * @deprecated
     */
    public function getTrainSearch()
    {
        @trigger_error('train_search is deprecated.', E_USER_DEPRECATED);
        return $this->train_search;
    }

    public function hasTrainSearch()
    {
        @trigger_error('train_search is deprecated.', E_USER_DEPRECATED);
        return isset($this->train_search);
    }

    public function clearTrainSearch()
    {
        @trigger_error('train_search is deprecated.', E_USER_DEPRECATED);
        unset($this->train_search);
    }

    /**
     *train_search is used to specify what data to train on.
     * Alternatively, use dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search train_search = 5 [deprecated = true];</code>
     * @param \Clarifai\Api\Search $var
     * @return $this
     * @deprecated
     */
    public function setTrainSearch($var)
    {
        @trigger_error('train_search is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Clarifai\Api\Search::class);
        $this->train_search = $var;

        return $this;
    }

    /**
     *test_search is used to specify what data to test on.
     * Alternatively, use dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search test_search = 6 [deprecated = true];</code>
     * @return \Clarifai\Api\Search|null
     * @deprecated
     */
    public function getTestSearch()
    {
        @trigger_error('test_search is deprecated.', E_USER_DEPRECATED);
        return $this->test_search;
    }

    public function hasTestSearch()
    {
        @trigger_error('test_search is deprecated.', E_USER_DEPRECATED);
        return isset($this->test_search);
    }

    public function clearTestSearch()
    {
        @trigger_error('test_search is deprecated.', E_USER_DEPRECATED);
        unset($this->test_search);
    }

    /**
     *test_search is used to specify what data to test on.
     * Alternatively, use dataset_version field.
     *
     * Generated from protobuf field <code>.clarifai.api.Search test_search = 6 [deprecated = true];</code>
     * @param \Clarifai\Api\Search $var
     * @return $this
     * @deprecated
     */
    public function setTestSearch($var)
    {
        @trigger_error('test_search is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Clarifai\Api\Search::class);
        $this->test_search = $var;

        return $this;
    }

    /**
     * Description about this training run
     *
     * Generated from protobuf field <code>string description = 8;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Description about this training run
     *
     * Generated from protobuf field <code>string description = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Use the data from this dataset version for training.
     * Set dataset_version.dataset_id to identify the dataset that you would like to use.
     * When dataset_version.id field is set,
     * the system will reuse the data from provided dataset version.
     * When dataset_version.id is not set,
     * a new dataset version will be created in the dataset using provided dataset_version fields.
     *
     * Generated from protobuf field <code>.clarifai.api.DatasetVersion dataset_version = 9;</code>
     * @return \Clarifai\Api\DatasetVersion|null
     */
    public function getDatasetVersion()
    {
        return $this->dataset_version;
    }

    public function hasDatasetVersion()
    {
        return isset($this->dataset_version);
    }

    public function clearDatasetVersion()
    {
        unset($this->dataset_version);
    }

    /**
     * Use the data from this dataset version for training.
     * Set dataset_version.dataset_id to identify the dataset that you would like to use.
     * When dataset_version.id field is set,
     * the system will reuse the data from provided dataset version.
     * When dataset_version.id is not set,
     * a new dataset version will be created in the dataset using provided dataset_version fields.
     *
     * Generated from protobuf field <code>.clarifai.api.DatasetVersion dataset_version = 9;</code>
     * @param \Clarifai\Api\DatasetVersion $var
     * @return $this
     */
    public function setDatasetVersion($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\DatasetVersion::class);
        $this->dataset_version = $var;

        return $this;
    }

    /**
     * When evaluate_after_training set to true, we will do evaluation immediately after training finishes.
     * We will merge this with default_eval_info.
     *
     * Generated from protobuf field <code>.clarifai.api.EvalInfo eval_info = 10;</code>
     * @return \Clarifai\Api\EvalInfo|null
     */
    public function getEvalInfo()
    {
        return $this->eval_info;
    }

    public function hasEvalInfo()
    {
        return isset($this->eval_info);
    }

    public function clearEvalInfo()
    {
        unset($this->eval_info);
    }

    /**
     * When evaluate_after_training set to true, we will do evaluation immediately after training finishes.
     * We will merge this with default_eval_info.
     *
     * Generated from protobuf field <code>.clarifai.api.EvalInfo eval_info = 10;</code>
     * @param \Clarifai\Api\EvalInfo $var
     * @return $this
     */
    public function setEvalInfo($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\EvalInfo::class);
        $this->eval_info = $var;

        return $this;
    }

}

