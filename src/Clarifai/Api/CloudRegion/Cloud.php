<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api\CloudRegion;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.CloudRegion.Cloud</code>
 */
class Cloud
{
    /**
     * Generated from protobuf enum <code>UNKOWN_CLOUD = 0;</code>
     */
    const UNKOWN_CLOUD = 0;
    /**
     * Run on a user's own infrastructure. This has restrictions on who can access resources
     * that are being run by SELF_HOSTED runners. Only those who are part of the user/org where they
     * exist can leverage them.
     *
     * Generated from protobuf enum <code>SELF_HOSTED = 1;</code>
     */
    const SELF_HOSTED = 1;
    /**
     * Generated from protobuf enum <code>AWS = 2;</code>
     */
    const AWS = 2;
    /**
     * Generated from protobuf enum <code>GCP = 3;</code>
     */
    const GCP = 3;
    /**
     * Generated from protobuf enum <code>AZURE = 4;</code>
     */
    const AZURE = 4;
    /**
     * Generated from protobuf enum <code>LAMBDA = 5;</code>
     */
    const LAMBDA = 5;

    private static $valueToName = [
        self::UNKOWN_CLOUD => 'UNKOWN_CLOUD',
        self::SELF_HOSTED => 'SELF_HOSTED',
        self::AWS => 'AWS',
        self::GCP => 'GCP',
        self::AZURE => 'AZURE',
        self::LAMBDA => 'LAMBDA',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Cloud::class, \Clarifai\Api\CloudRegion_Cloud::class);

